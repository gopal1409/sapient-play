pipeline{
     agent any
    stages{
        stage("Terraform Init"){
            steps{
                sh 'terraform init -upgrade -no-color'
            }
        }
         stage("Azure Login"){
              when {
                expression{action == "login"}
            }
              steps{
                sh 'az login'   
              }
         }
        stage("Terraform Plan"){
             when {
                expression{action == "apply"}
            }
            steps{
//                   sh 'echo "Hello"'
              sh 'terraform plan -out main.tfplan'
            }
        }
        stage("Terraform Apply Plan"){
             when {
                expression{action == "apply"}
            }
            steps{
                 sh 'echo "Hello"'
//                  sh 'terraform apply -auto-approve main.tfplan '
            }
        }
        stage("Show Public IP of VM"){
             when {
                expression{action == "apply"}
            }
            steps{
//                   sh 'echo "Hello"'
               sh 'terraform output -raw tls_private_key > id_rsa '
            }
        }
        stage("SSH To VM"){
            when {
                expression{action == "apply"}
            }
            steps{
                sh '''
                    chmod 600 id_rsa
                    ip=$(terraform output public_ip_address)
                    ssh -i id_rsa -o StrictHostKeyChecking=no azureuser@$( echo "$ip" | tr -d '"') < command.txt
                '''
            }
        }
        stage("Deploy Helm Chart"){
             
            when {
                expression{action == "apply"}
            }
            steps{
                sh ''' 
                 echo "Hello"
               ''' 
 //                 ssh -i id_rsa -o StrictHostKeyChecking=no azureuser@$( echo "$ip" | tr -d '"') < cmd1.txt 
            }
        }
        stage("Output"){
             
            when {
                expression{action == "apply"}
            }
            steps{
                sh '''
                   echo "Hello"  
                '''
                 //        ssh -i id_rsa -o StrictHostKeyChecking=no azureuser@$( echo "$ip" | tr -d '"')  < cmd2.txt  
            }
        }
        stage("Connect to aks"){
            when {
                expression{action == "apply"}
            }
            steps{
                 sh '''
                    rg_name=$(terraform output resource_group_name)
                    az aks get-credentials --resource-group $(echo "$rg_name" | tr -d '"') --name k8s
                    kubectl get nodes
                '''
            }
            
        }
        stage("Deploy Helm Chart to AKS"){
            when {
                expression{action == "apply"}
            }
            steps{
                sh '''
                    helm repo add nginx-stable https://helm.nginx.com/stable
                    helm repo update
                    helm install nginx-w-istio nginx-stable/nginx-ingress
                '''
            }
            
        } 
        stage("Terraform destroy"){
            when {
                expression{action == "destroy"}
            }
            steps{
                sh '''
                 terraform plan -destroy -out main.destroy.tfplan
                 terraform apply -auto-approve main.destroy.tfplan
                '''
            }
        } 
    }
}
